import { ClipboardProviderInterface } from "./clipboard-provider.interface";
import { ImageFinderInterface } from "./image-finder.interface";
import { KeyboardProviderInterface } from "./keyboard-provider.interface";
import { MouseProviderInterface } from "./mouse-provider.interface";
import { ScreenProviderInterface } from "./screen-provider.interface";
import { WindowProviderInterface } from "./window-provider.interface";
import { ImageReader } from "./image-reader.type";
import { ImageWriter } from "./image-writer.type";
import { ImageProcessor } from "./image-processor.interface";
export interface ProviderRegistry {
    getClipboard(): ClipboardProviderInterface;
    registerClipboardProvider(value: ClipboardProviderInterface): void;
    getKeyboard(): KeyboardProviderInterface;
    registerKeyboardProvider(value: KeyboardProviderInterface): void;
    getMouse(): MouseProviderInterface;
    registerMouseProvider(value: MouseProviderInterface): void;
    getScreen(): ScreenProviderInterface;
    registerScreenProvider(value: ScreenProviderInterface): void;
    getWindow(): WindowProviderInterface;
    registerWindowProvider(value: WindowProviderInterface): void;
    getImageFinder(): ImageFinderInterface;
    registerImageFinder(value: ImageFinderInterface): void;
    getImageReader(): ImageReader;
    registerImageReader(value: ImageReader): void;
    getImageWriter(): ImageWriter;
    registerImageWriter(value: ImageWriter): void;
    getImageProcessor(): ImageProcessor;
    registerImageProcessor(value: ImageProcessor): void;
}
declare class DefaultProviderRegistry implements ProviderRegistry {
    private _clipboard?;
    private _finder?;
    private _keyboard?;
    private _mouse?;
    private _screen?;
    private _window?;
    private _imageReader?;
    private _imageWriter?;
    private _imageProcessor?;
    getClipboard(): ClipboardProviderInterface;
    registerClipboardProvider(value: ClipboardProviderInterface): void;
    getImageFinder(): ImageFinderInterface;
    registerImageFinder(value: ImageFinderInterface): void;
    getKeyboard(): KeyboardProviderInterface;
    registerKeyboardProvider(value: KeyboardProviderInterface): void;
    getMouse(): MouseProviderInterface;
    registerMouseProvider(value: MouseProviderInterface): void;
    getScreen(): ScreenProviderInterface;
    registerScreenProvider(value: ScreenProviderInterface): void;
    getWindow(): WindowProviderInterface;
    registerWindowProvider(value: WindowProviderInterface): void;
    getImageReader(): ImageReader;
    registerImageReader(value: ImageReader): void;
    getImageWriter(): ImageWriter;
    registerImageWriter(value: ImageWriter): void;
    getImageProcessor(): ImageProcessor;
    registerImageProcessor(value: ImageProcessor): void;
}
declare const providerRegistry: DefaultProviderRegistry;
export default providerRegistry;
//# sourceMappingURL=provider-registry.class.d.ts.map